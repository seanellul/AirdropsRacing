/// <reference types="dcl" />
export declare class DynamicImage {
    image: UIImage;
    private animation;
    private tweens;
    constructor(image: UIImage);
    fadeIn(duration: number, ease?: (n: number) => number, callback?: () => void): void;
    fadeOut(duration: number, ease?: (n: number) => number, callback?: () => void): void;
    fadeTo(opacity: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveTo(x: number | string, y: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveToX(x: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveToY(y: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveRelativeTo(x: number | string, y: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeTo(width: number | string, height: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeWidthTo(width: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeHeightTo(height: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveSourceTo(x: number, y: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveSourceLeftTo(x: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    moveSourceTopTo(y: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeSourceTo(width: number, height: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeSourceWidthTo(width: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    resizeSourceHeightTo(height: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    scaleIn(startScale: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    scaleOut(endScale: number | string, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    scaleTo(size: number, duration: number, ease?: (n: number) => number, callback?: () => void): void;
    update(data: any, dt: number): void;
}
